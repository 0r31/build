From 6b0d24ad63dd856e1c2abb7faa945949c85e1e0a Mon Sep 17 00:00:00 2001
From: Ondrej Jirman <megous@megous.com>
Date: Sun, 12 Jul 2020 17:09:07 +0200
Subject: [PATCH 334/346] misc: modem-power: Add some serdev code

---
 drivers/misc/modem-power.c | 68 ++++++++++++++++++++++++++++++++++++++
 1 file changed, 68 insertions(+)

diff --git a/drivers/misc/modem-power.c b/drivers/misc/modem-power.c
index e84877e74b10..4bc2fd43979e 100644
--- a/drivers/misc/modem-power.c
+++ b/drivers/misc/modem-power.c
@@ -35,6 +35,7 @@
 #include <linux/regulator/consumer.h>
 #include <linux/delay.h>
 #include <linux/slab.h>
+#include <linux/serdev.h>
 
 #define DRIVER_NAME "modem-power"
 
@@ -1046,6 +1047,73 @@ static void mpwr_shutdown(struct platform_device *pdev)
 	mpwr_power_down(mpwr);
 }
 
+#if 0
+static int mpwr_serdev_receive_buf(struct serdev_device *serdev,
+				   const unsigned char *buf, size_t count)
+{
+	struct mpwr_dev *mpwr = serdev_device_get_drvdata(serdev);
+        int ret = 0;
+
+	//wake_up_interruptible(&data->power_wait);
+
+        return ret;
+}
+
+static const struct serdev_device_ops mpwr_serdev_ops = {
+	.receive_buf = mpwr_serdev_receive_buf,
+	.write_wakeup = serdev_device_write_wakeup,
+};
+
+static int mpwr_serdev_probe(struct serdev_device *serdev)
+{
+	struct device *dev = &serdev->dev;
+         struct device_node *node = serdev->dev.of_node;
+         u32 speed = 9600;
+
+         serdev_device_set_drvdata(serdev, data);
+         serdev_device_set_client_ops(serdev, &mpwr_serdev_ops);
+
+         of_property_read_u32(node, "current-speed", &speed);
+
+	 ret = serdev_device_open(data->serdev);
+	 if (ret) {
+		 goto out_unlock;
+	 }
+
+	 serdev_device_set_baudrate(data->serdev, data->speed);
+	 serdev_device_set_flow_control(data->serdev, false);
+
+	 /* write is only buffered synchronously */
+	 ret = serdev_device_write(serdev, buf, count, MAX_SCHEDULE_TIMEOUT);
+	 if (ret < 0 || ret < count)
+		 return ret;
+
+	 /* FIXME: determine if interrupted? */
+	 serdev_device_wait_until_sent(serdev, 0);
+
+
+	 serdev_device_close(data->serdev);
+}
+
+static void mpwr_serdev_remove(struct serdev_device *serdev)
+{
+	struct mpwr_dev *mpwr = serdev_device_get_drvdata(serdev);
+
+}
+
+static const struct of_device_id mpwr_of_match[];
+
+static struct serdev_device_driver mpwr_serdev_driver = {
+        .probe  = mpwr_serdev_probe,
+        .remove = mpwr_serdev_remove,
+        .driver = {
+                .name = DRIVER_NAME,
+                .of_match_table = mpwr_of_match,
+        },
+};
+module_serdev_device_driver(mpwr_serdev_driver);
+#endif
+
 static const struct of_device_id mpwr_of_match[] = {
 	{ .compatible = "zte,mg3732",
 	  .data = &mpwr_mg2723_variant },
-- 
2.25.1

